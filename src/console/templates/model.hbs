import { Bookshelf } from '../../{{deepness}}config/Database';


export class {{name.capitalize}} extends Bookshelf.Model<{{name.capitalize}}> {

    public static async fetchById(value: number): Promise<{{name.capitalize}}> {
        return await {{name.capitalize}}.where<{{name.capitalize}}>({ id: value }).fetch();
    }

    public get tableName(): string { return '{{tableName}}'; }
    public get hasTimestamps(): boolean { return {{hasTimestamps}}; }

    public get Id(): number { return this.get('id'); }
    public set Id(value: number) { this.set('id', value); }
    {{#each properties}}

    public get {{name.capitalize}}(): {{type.script}} { return this.get('{{name.camelCase}}'); }
    public set {{name.capitalize}}(value: {{type.script}}) { this.set('{{name.camelCase}}', value); }
    {{/each}}

    {{#if hasTimestamps}}
    public get UpdatedAt(): Date { return this.get('updatedAt'); }
    public set UpdatedAt(value: Date) { this.set('updatedAt', value); }

    public get CreatedAt(): Date { return this.get('createdAt'); }
    public set CreatedAt(value: Date) { this.set('createdAt', value); }
    {{/if}}
}
